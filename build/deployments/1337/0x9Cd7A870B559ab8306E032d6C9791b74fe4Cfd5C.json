{"abi": [{"inputs": [{"internalType": "uint8", "name": "_decimals", "type": "uint8"}, {"internalType": "int256", "name": "_initialAnswer", "type": "int256"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "int256", "name": "current", "type": "int256"}, {"indexed": true, "internalType": "uint256", "name": "roundId", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "updatedAt", "type": "uint256"}], "name": "AnswerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "roundId", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "startedBy", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "startedAt", "type": "uint256"}], "name": "NewRound", "type": "event"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "description", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "getAnswer", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint80", "name": "_roundId", "type": "uint80"}], "name": "getRoundData", "outputs": [{"internalType": "uint80", "name": "roundId", "type": "uint80"}, {"internalType": "int256", "name": "answer", "type": "int256"}, {"internalType": "uint256", "name": "startedAt", "type": "uint256"}, {"internalType": "uint256", "name": "updatedAt", "type": "uint256"}, {"internalType": "uint80", "name": "answeredInRound", "type": "uint80"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "getTimestamp", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "latestAnswer", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "latestRound", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "latestRoundData", "outputs": [{"internalType": "uint80", "name": "roundId", "type": "uint80"}, {"internalType": "int256", "name": "answer", "type": "int256"}, {"internalType": "uint256", "name": "startedAt", "type": "uint256"}, {"internalType": "uint256", "name": "updatedAt", "type": "uint256"}, {"internalType": "uint80", "name": "answeredInRound", "type": "uint80"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "latestTimestamp", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "int256", "name": "_answer", "type": "int256"}], "name": "updateAnswer", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint80", "name": "_roundId", "type": "uint80"}, {"internalType": "int256", "name": "_answer", "type": "int256"}, {"internalType": "uint256", "name": "_timestamp", "type": "uint256"}, {"internalType": "uint256", "name": "_startedAt", "type": "uint256"}], "name": "updateRoundData", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "version", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "/Users/zhouyuhang/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.3.0/contracts/src/v0.8/interfaces/AggregatorInterface.sol", "1": "/Users/zhouyuhang/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.3.0/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol", "2": "/Users/zhouyuhang/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.3.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "4": "contracts/test/MockV3Aggregator.sol"}, "ast": {"absolutePath": "contracts/test/MockV3Aggregator.sol", "exportedSymbols": {"AggregatorInterface": [494], "AggregatorV2V3Interface": [446], "AggregatorV3Interface": [437], "MockV3Aggregator": [391]}, "id": 392, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 187, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "32:23:4"}, {"absolutePath": "/Users/zhouyuhang/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.3.0/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol", "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol", "id": 188, "nodeType": "ImportDirective", "scope": 392, "sourceUnit": 447, "src": "57:78:4", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 190, "name": "AggregatorV2V3Interface", "nodeType": "IdentifierPath", "referencedDeclaration": 446, "src": "429:23:4"}, "id": 191, "nodeType": "InheritanceSpecifier", "src": "429:23:4"}], "contractDependencies": [437, 446, 494], "contractKind": "contract", "documentation": {"id": 189, "nodeType": "StructuredDocumentation", "src": "137:262:4", "text": " @title MockV3Aggregator\n @notice Based on the FluxAggregator contract\n @notice Use this contract when you need to test\n other contract's ability to read data from an\n aggregator contract, but how the aggregator got\n its answer is unimportant"}, "fullyImplemented": true, "id": 391, "linearizedBaseContracts": [391, 446, 437, 494], "name": "MockV3Aggregator", "nodeType": "ContractDefinition", "nodes": [{"baseFunctions": [408], "constant": true, "functionSelector": "54fd4d50", "id": 195, "mutability": "constant", "name": "version", "nodeType": "VariableDeclaration", "overrides": {"id": 193, "nodeType": "OverrideSpecifier", "overrides": [], "src": "483:8:4"}, "scope": 391, "src": "459:44:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 192, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "459:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 194, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "502:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"baseFunctions": [398], "constant": false, "functionSelector": "313ce567", "id": 198, "mutability": "mutable", "name": "decimals", "nodeType": "VariableDeclaration", "overrides": {"id": 197, "nodeType": "OverrideSpecifier", "overrides": [], "src": "523:8:4"}, "scope": 391, "src": "510:30:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 196, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "510:5:4", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "public"}, {"baseFunctions": [453], "constant": false, "functionSelector": "50d25bcd", "id": 201, "mutability": "mutable", "name": "latestAnswer", "nodeType": "VariableDeclaration", "overrides": {"id": 200, "nodeType": "OverrideSpecifier", "overrides": [], "src": "560:8:4"}, "scope": 391, "src": "546:35:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 199, "name": "int256", "nodeType": "ElementaryTypeName", "src": "546:6:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"baseFunctions": [458], "constant": false, "functionSelector": "8205bf6a", "id": 204, "mutability": "mutable", "name": "latestTimestamp", "nodeType": "VariableDeclaration", "overrides": {"id": 203, "nodeType": "OverrideSpecifier", "overrides": [], "src": "602:8:4"}, "scope": 391, "src": "587:39:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 202, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "587:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"baseFunctions": [463], "constant": false, "functionSelector": "668a0f02", "id": 207, "mutability": "mutable", "name": "latestRound", "nodeType": "VariableDeclaration", "overrides": {"id": 206, "nodeType": "OverrideSpecifier", "overrides": [], "src": "647:8:4"}, "scope": 391, "src": "632:35:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 205, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "632:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"baseFunctions": [470], "constant": false, "functionSelector": "b5ab58dc", "id": 212, "mutability": "mutable", "name": "getAnswer", "nodeType": "VariableDeclaration", "overrides": {"id": 211, "nodeType": "OverrideSpecifier", "overrides": [], "src": "708:8:4"}, "scope": 391, "src": "674:52:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$", "typeString": "mapping(uint256 => int256)"}, "typeName": {"id": 210, "keyType": {"id": 208, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "682:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "674:26:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$", "typeString": "mapping(uint256 => int256)"}, "valueType": {"id": 209, "name": "int256", "nodeType": "ElementaryTypeName", "src": "693:6:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, "visibility": "public"}, {"baseFunctions": [477], "constant": false, "functionSelector": "b633620c", "id": 217, "mutability": "mutable", "name": "getTimestamp", "nodeType": "VariableDeclaration", "overrides": {"id": 216, "nodeType": "OverrideSpecifier", "overrides": [], "src": "767:8:4"}, "scope": 391, "src": "732:56:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "typeName": {"id": 215, "keyType": {"id": 213, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "740:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "732:27:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "valueType": {"id": 214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "751:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "id": 221, "mutability": "mutable", "name": "getStartedAt", "nodeType": "VariableDeclaration", "scope": 391, "src": "794:48:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "typeName": {"id": 220, "keyType": {"id": 218, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "802:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "794:27:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "valueType": {"id": 219, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "813:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"body": {"id": 236, "nodeType": "Block", "src": "908:75:4", "statements": [{"expression": {"id": 230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 228, "name": "decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 198, "src": "918:8:4", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 229, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "929:9:4", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "918:20:4", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 231, "nodeType": "ExpressionStatement", "src": "918:20:4"}, {"expression": {"arguments": [{"id": 233, "name": "_initialAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 225, "src": "961:14:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 232, "name": "updateAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "948:12:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_int256_$returns$__$", "typeString": "function (int256)"}}, "id": 234, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "948:28:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 235, "nodeType": "ExpressionStatement", "src": "948:28:4"}]}, "id": 237, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 226, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 223, "mutability": "mutable", "name": "_decimals", "nodeType": "VariableDeclaration", "scope": 237, "src": "861:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 222, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "861:5:4", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 225, "mutability": "mutable", "name": "_initialAnswer", "nodeType": "VariableDeclaration", "scope": 237, "src": "878:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 224, "name": "int256", "nodeType": "ElementaryTypeName", "src": "878:6:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "860:40:4"}, "returnParameters": {"id": 227, "nodeType": "ParameterList", "parameters": [], "src": "908:0:4"}, "scope": 391, "src": "849:134:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 274, "nodeType": "Block", "src": "1034:253:4", "statements": [{"expression": {"id": 244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 242, "name": "latestAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "1044:12:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 243, "name": "_answer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 239, "src": "1059:7:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "1044:22:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 245, "nodeType": "ExpressionStatement", "src": "1044:22:4"}, {"expression": {"id": 249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 246, "name": "latestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "1076:15:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 247, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1094:5:4", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "1094:15:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1076:33:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 250, "nodeType": "ExpressionStatement", "src": "1076:33:4"}, {"expression": {"id": 252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1119:13:4", "subExpression": {"id": 251, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1119:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 253, "nodeType": "ExpressionStatement", "src": "1119:13:4"}, {"expression": {"id": 258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 254, "name": "getAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 212, "src": "1142:9:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$", "typeString": "mapping(uint256 => int256)"}}, "id": 256, "indexExpression": {"id": 255, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1152:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1142:22:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 257, "name": "_answer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 239, "src": "1167:7:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "1142:32:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 259, "nodeType": "ExpressionStatement", "src": "1142:32:4"}, {"expression": {"id": 265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 260, "name": "getTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 217, "src": "1184:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 262, "indexExpression": {"id": 261, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1197:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1184:25:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 263, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1212:5:4", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "1212:15:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1184:43:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 266, "nodeType": "ExpressionStatement", "src": "1184:43:4"}, {"expression": {"id": 272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 267, "name": "getStartedAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 221, "src": "1237:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 269, "indexExpression": {"id": 268, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1250:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1237:25:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 270, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1265:5:4", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "1265:15:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1237:43:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 273, "nodeType": "ExpressionStatement", "src": "1237:43:4"}]}, "functionSelector": "a87a20ce", "id": 275, "implemented": true, "kind": "function", "modifiers": [], "name": "updateAnswer", "nodeType": "FunctionDefinition", "parameters": {"id": 240, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 239, "mutability": "mutable", "name": "_answer", "nodeType": "VariableDeclaration", "scope": 275, "src": "1011:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 238, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1011:6:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "1010:16:4"}, "returnParameters": {"id": 241, "nodeType": "ParameterList", "parameters": [], "src": "1034:0:4"}, "scope": 391, "src": "989:298:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 316, "nodeType": "Block", "src": "1436:247:4", "statements": [{"expression": {"id": 288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 286, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1446:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 287, "name": "_roundId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 277, "src": "1460:8:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "src": "1446:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 289, "nodeType": "ExpressionStatement", "src": "1446:22:4"}, {"expression": {"id": 292, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 290, "name": "latestAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "1478:12:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 291, "name": "_answer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "1493:7:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "1478:22:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 293, "nodeType": "ExpressionStatement", "src": "1478:22:4"}, {"expression": {"id": 296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 294, "name": "latestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "1510:15:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 295, "name": "_timestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 281, "src": "1528:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1510:28:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 297, "nodeType": "ExpressionStatement", "src": "1510:28:4"}, {"expression": {"id": 302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 298, "name": "getAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 212, "src": "1548:9:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$", "typeString": "mapping(uint256 => int256)"}}, "id": 300, "indexExpression": {"id": 299, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1558:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1548:22:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 301, "name": "_answer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "1573:7:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "1548:32:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 303, "nodeType": "ExpressionStatement", "src": "1548:32:4"}, {"expression": {"id": 308, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 304, "name": "getTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 217, "src": "1590:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 306, "indexExpression": {"id": 305, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1603:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1590:25:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 307, "name": "_timestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 281, "src": "1618:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1590:38:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 309, "nodeType": "ExpressionStatement", "src": "1590:38:4"}, {"expression": {"id": 314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 310, "name": "getStartedAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 221, "src": "1638:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 312, "indexExpression": {"id": 311, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "1651:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1638:25:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 313, "name": "_startedAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 283, "src": "1666:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1638:38:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 315, "nodeType": "ExpressionStatement", "src": "1638:38:4"}]}, "functionSelector": "4aa2011f", "id": 317, "implemented": true, "kind": "function", "modifiers": [], "name": "updateRoundData", "nodeType": "FunctionDefinition", "parameters": {"id": 284, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 277, "mutability": "mutable", "name": "_roundId", "nodeType": "VariableDeclaration", "scope": 317, "src": "1327:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}, "typeName": {"id": 276, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "1327:6:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "visibility": "internal"}, {"constant": false, "id": 279, "mutability": "mutable", "name": "_answer", "nodeType": "VariableDeclaration", "scope": 317, "src": "1352:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 278, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1352:6:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 281, "mutability": "mutable", "name": "_timestamp", "nodeType": "VariableDeclaration", "scope": 317, "src": "1376:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 280, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1376:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 283, "mutability": "mutable", "name": "_startedAt", "nodeType": "VariableDeclaration", "scope": 317, "src": "1404:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 282, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1404:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1317:111:4"}, "returnParameters": {"id": 285, "nodeType": "ParameterList", "parameters": [], "src": "1436:0:4"}, "scope": 391, "src": "1293:390:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [423], "body": {"id": 346, "nodeType": "Block", "src": "1959:183:4", "statements": [{"expression": {"components": [{"id": 333, "name": "_roundId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 319, "src": "1990:8:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, {"baseExpression": {"id": 334, "name": "getAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 212, "src": "2012:9:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$", "typeString": "mapping(uint256 => int256)"}}, "id": 336, "indexExpression": {"id": 335, "name": "_roundId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 319, "src": "2022:8:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2012:19:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"baseExpression": {"id": 337, "name": "getStartedAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 221, "src": "2045:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 339, "indexExpression": {"id": 338, "name": "_roundId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 319, "src": "2058:8:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2045:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 340, "name": "getTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 217, "src": "2081:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 342, "indexExpression": {"id": 341, "name": "_roundId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 319, "src": "2094:8:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2081:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 343, "name": "_roundId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 319, "src": "2117:8:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}], "id": 344, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1976:159:4", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"}}, "functionReturnParameters": 332, "id": 345, "nodeType": "Return", "src": "1969:166:4"}]}, "functionSelector": "9a6fc8f5", "id": 347, "implemented": true, "kind": "function", "modifiers": [], "name": "getRoundData", "nodeType": "FunctionDefinition", "overrides": {"id": 321, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1766:8:4"}, "parameters": {"id": 320, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 319, "mutability": "mutable", "name": "_roundId", "nodeType": "VariableDeclaration", "scope": 347, "src": "1711:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}, "typeName": {"id": 318, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "1711:6:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "visibility": "internal"}], "src": "1710:17:4"}, "returnParameters": {"id": 332, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 323, "mutability": "mutable", "name": "roundId", "nodeType": "VariableDeclaration", "scope": 347, "src": "1805:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}, "typeName": {"id": 322, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "1805:6:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "visibility": "internal"}, {"constant": false, "id": 325, "mutability": "mutable", "name": "answer", "nodeType": "VariableDeclaration", "scope": 347, "src": "1833:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 324, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1833:6:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 327, "mutability": "mutable", "name": "startedAt", "nodeType": "VariableDeclaration", "scope": 347, "src": "1860:17:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 326, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1860:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 329, "mutability": "mutable", "name": "updatedAt", "nodeType": "VariableDeclaration", "scope": 347, "src": "1891:17:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 328, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1891:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 331, "mutability": "mutable", "name": "answeredInRound", "nodeType": "VariableDeclaration", "scope": 347, "src": "1922:22:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}, "typeName": {"id": 330, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "1922:6:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "visibility": "internal"}], "src": "1791:163:4"}, "scope": 391, "src": "1689:453:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [436], "body": {"id": 380, "nodeType": "Block", "src": "2406:214:4", "statements": [{"expression": {"components": [{"arguments": [{"id": 363, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "2444:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 362, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2437:6:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint80_$", "typeString": "type(uint80)"}, "typeName": {"id": 361, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "2437:6:4", "typeDescriptions": {}}}, "id": 364, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2437:19:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, {"baseExpression": {"id": 365, "name": "getAnswer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 212, "src": "2470:9:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$", "typeString": "mapping(uint256 => int256)"}}, "id": 367, "indexExpression": {"id": 366, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "2480:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2470:22:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"baseExpression": {"id": 368, "name": "getStartedAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 221, "src": "2506:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 370, "indexExpression": {"id": 369, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "2519:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2506:25:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 371, "name": "getTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 217, "src": "2545:12:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 373, "indexExpression": {"id": 372, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "2558:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2545:25:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 376, "name": "latestRound", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 207, "src": "2591:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 375, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2584:6:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint80_$", "typeString": "type(uint80)"}, "typeName": {"id": 374, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "2584:6:4", "typeDescriptions": {}}}, "id": 377, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2584:19:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}], "id": 378, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2423:190:4", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"}}, "functionReturnParameters": 360, "id": 379, "nodeType": "Return", "src": "2416:197:4"}]}, "functionSelector": "feaf968c", "id": 381, "implemented": true, "kind": "function", "modifiers": [], "name": "latestRoundData", "nodeType": "FunctionDefinition", "overrides": {"id": 349, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2213:8:4"}, "parameters": {"id": 348, "nodeType": "ParameterList", "parameters": [], "src": "2172:2:4"}, "returnParameters": {"id": 360, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 351, "mutability": "mutable", "name": "roundId", "nodeType": "VariableDeclaration", "scope": 381, "src": "2252:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}, "typeName": {"id": 350, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "2252:6:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "visibility": "internal"}, {"constant": false, "id": 353, "mutability": "mutable", "name": "answer", "nodeType": "VariableDeclaration", "scope": 381, "src": "2280:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 352, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2280:6:4", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 355, "mutability": "mutable", "name": "startedAt", "nodeType": "VariableDeclaration", "scope": 381, "src": "2307:17:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 354, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2307:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 357, "mutability": "mutable", "name": "updatedAt", "nodeType": "VariableDeclaration", "scope": 381, "src": "2338:17:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 356, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2338:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 359, "mutability": "mutable", "name": "answeredInRound", "nodeType": "VariableDeclaration", "scope": 381, "src": "2369:22:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}, "typeName": {"id": 358, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "2369:6:4", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "visibility": "internal"}], "src": "2238:163:4"}, "scope": 391, "src": "2148:472:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [403], "body": {"id": 389, "nodeType": "Block", "src": "2696:57:4", "statements": [{"expression": {"hexValue": "76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c", "id": 387, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2713:33:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f07fb5b1ad79aac528cd96a1cc4b4ec6f7cefc63060a932b3b6750094ba19ff0", "typeString": "literal_string \"v0.6/tests/MockV3Aggregator.sol\""}, "value": "v0.6/tests/MockV3Aggregator.sol"}, "functionReturnParameters": 386, "id": 388, "nodeType": "Return", "src": "2706:40:4"}]}, "functionSelector": "7284e416", "id": 390, "implemented": true, "kind": "function", "modifiers": [], "name": "description", "nodeType": "FunctionDefinition", "overrides": {"id": 383, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2663:8:4"}, "parameters": {"id": 382, "nodeType": "ParameterList", "parameters": [], "src": "2646:2:4"}, "returnParameters": {"id": 386, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 385, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 390, "src": "2681:13:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 384, "name": "string", "nodeType": "ElementaryTypeName", "src": "2681:6:4", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2680:15:4"}, "scope": 391, "src": "2626:127:4", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 392, "src": "400:2355:4"}], "src": "32:2792:4"}, "bytecode": "608060405234801561001057600080fd5b506040516105ad3803806105ad83398101604081905261002f916100a4565b6000805460ff191660ff84161790556100478161004e565b50506100fd565b60018190554260025560038054906000610067836100d6565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b600080604083850312156100b6578182fd5b825160ff811681146100c6578283fd5b6020939093015192949293505050565b60006000198214156100f657634e487b7160e01b81526011600452602481fd5b5060010190565b6104a18061010c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101265780639a6fc8f51461012e578063a87a20ce14610152578063b5ab58dc14610165578063b633620c14610178578063feaf968c1461018b576100b4565b8063313ce567146100b95780634aa2011f146100d757806350d25bcd146100ec57806354fd4d5014610101578063668a0f02146101095780637284e41614610111575b600080fd5b6100c1610193565b6040516100ce9190610436565b60405180910390f35b6100ea6100e536600461036f565b61019c565b005b6100f46101e9565b6040516100ce91906103a7565b6100f46101ef565b6100f46101f4565b6101196101fa565b6040516100ce91906103b0565b6100f4610231565b61014161013c36600461034e565b610237565b6040516100ce959493929190610403565b6100ea610160366004610336565b610270565b6100f4610173366004610336565b6102c6565b6100f4610186366004610336565b6102d8565b6101416102ea565b60005460ff1681565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6001819055426002556003805490600061028983610444565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b60046020526000908152604090205481565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054839091929394565b803569ffffffffffffffffffff8116811461033157600080fd5b919050565b600060208284031215610347578081fd5b5035919050565b60006020828403121561035f578081fd5b61036882610317565b9392505050565b60008060008060808587031215610384578283fd5b61038d85610317565b966020860135965060408601359560600135945092505050565b90815260200190565b6000602080835283518082850152825b818110156103dc578581018301518582016040015282016103c0565b818111156103ed5783604083870101525b50601f01601f1916929092016040019392505050565b69ffffffffffffffffffff9586168152602081019490945260408401929092526060830152909116608082015260a00190565b60ff91909116815260200190565b600060001982141561046457634e487b7160e01b81526011600452602481fd5b506001019056fea264697066735822122074dd9c5ae46cc75bb236a0f91aba13e86b0dd040fd0739375fb6f9bbb3c5aa0e64736f6c63430008000033", "bytecodeSha1": "beeba8a4b196e380b74c74b1e116dff58cb463f5", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.0+commit.c7dfd78e"}, "contractName": "MockV3Aggregator", "coverageMap": {"branches": {"0": {}, "1": {}, "2": {}, "4": {}}, "statements": {"0": {}, "1": {}, "2": {}, "4": {"MockV3Aggregator.description": {"6": [2706, 2746]}, "MockV3Aggregator.getRoundData": {"7": [1969, 2135]}, "MockV3Aggregator.latestRoundData": {"14": [2416, 2613]}, "MockV3Aggregator.updateAnswer": {"8": [1044, 1066], "9": [1076, 1109], "10": [1119, 1132], "11": [1142, 1174], "12": [1184, 1227], "13": [1237, 1280]}, "MockV3Aggregator.updateRoundData": {"0": [1446, 1468], "1": [1478, 1500], "2": [1510, 1538], "3": [1548, 1580], "4": [1590, 1628], "5": [1638, 1676]}}}}, "dependencies": ["smartcontractkit/chainlink-brownie-contracts@0.3.0/AggregatorInterface", "smartcontractkit/chainlink-brownie-contracts@0.3.0/AggregatorV2V3Interface", "smartcontractkit/chainlink-brownie-contracts@0.3.0/AggregatorV3Interface"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101265780639a6fc8f51461012e578063a87a20ce14610152578063b5ab58dc14610165578063b633620c14610178578063feaf968c1461018b576100b4565b8063313ce567146100b95780634aa2011f146100d757806350d25bcd146100ec57806354fd4d5014610101578063668a0f02146101095780637284e41614610111575b600080fd5b6100c1610193565b6040516100ce9190610436565b60405180910390f35b6100ea6100e536600461036f565b61019c565b005b6100f46101e9565b6040516100ce91906103a7565b6100f46101ef565b6100f46101f4565b6101196101fa565b6040516100ce91906103b0565b6100f4610231565b61014161013c36600461034e565b610237565b6040516100ce959493929190610403565b6100ea610160366004610336565b610270565b6100f4610173366004610336565b6102c6565b6100f4610186366004610336565b6102d8565b6101416102ea565b60005460ff1681565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6001819055426002556003805490600061028983610444565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b60046020526000908152604090205481565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054839091929394565b803569ffffffffffffffffffff8116811461033157600080fd5b919050565b600060208284031215610347578081fd5b5035919050565b60006020828403121561035f578081fd5b61036882610317565b9392505050565b60008060008060808587031215610384578283fd5b61038d85610317565b966020860135965060408601359560600135945092505050565b90815260200190565b6000602080835283518082850152825b818110156103dc578581018301518582016040015282016103c0565b818111156103ed5783604083870101525b50601f01601f1916929092016040019392505050565b69ffffffffffffffffffff9586168152602081019490945260408401929092526060830152909116608082015260a00190565b60ff91909116815260200190565b600060001982141561046457634e487b7160e01b81526011600452602481fd5b506001019056fea264697066735822122074dd9c5ae46cc75bb236a0f91aba13e86b0dd040fd0739375fb6f9bbb3c5aa0e64736f6c63430008000033", "deployedSourceMap": "400:2355:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1293:390;;;;;;:::i;:::-;;:::i;:::-;;546:35;;;:::i;:::-;;;;;;;:::i;459:44::-;;;:::i;632:35::-;;;:::i;2626:127::-;;;:::i;:::-;;;;;;;:::i;587:39::-;;;:::i;1689:453::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;989:298::-;;;;;;:::i;:::-;;:::i;674:52::-;;;;;;:::i;:::-;;:::i;732:56::-;;;;;;:::i;:::-;;:::i;2148:472::-;;;:::i;510:30::-;;;;;;:::o;1293:390::-;1446:22;;;;:11;:22;;;1478:12;:22;;;-1:-1:-1;1510:28:4;;;-1:-1:-1;1548:22:4;;;:9;:22;;;;;;;;:32;;;;1603:11;;1590:25;;:12;:25;;;;;:38;;;;1651:11;1638:25;;:12;:25;;;;:38;1293:390::o;546:35::-;;;;:::o;459:44::-;502:1;459:44;:::o;632:35::-;;;;:::o;2626:127::-;2706:40;;;;;;;;;;;;;;;;;2626:127;:::o;587:39::-;;;;:::o;1689:453::-;2012:19;;;1805:14;2012:19;;;:9;:19;;;;;;;;;2045:12;:22;;;;;;2081:12;:22;;;;;;2012:19;;;;2045:22;;2012:19;;1689:453::o;989:298::-;1044:12;:22;;;1094:15;1076;:33;1119:11;:13;;;-1:-1:-1;1119:13:4;;;:::i;:::-;;;;-1:-1:-1;;1152:11:4;;;1142:22;;;;:9;:22;;;;;;;;:32;;;;1197:11;;1184:25;;:12;:25;;;;;1212:15;1184:43;;;;1250:11;;1237:25;;:12;:25;;;;;;:43;989:298::o;674:52::-;;;;;;;;;;;;;:::o;732:56::-;;;;;;;;;;;;;:::o;2148:472::-;2444:11;;2252:14;2470:22;;;:9;:22;;;;;;;;;2506:12;:25;;;;;;2545:12;:25;;;;;;2444:11;2148:472;;;;;:::o;14:177:5:-;83:20;;143:22;132:34;;122:45;;112:2;;181:1;178;171:12;112:2;64:127;;;:::o;196:189::-;;307:2;295:9;286:7;282:23;278:32;275:2;;;328:6;320;313:22;275:2;-1:-1:-1;356:23:5;;265:120;-1:-1:-1;265:120:5:o;585:196::-;;696:2;684:9;675:7;671:23;667:32;664:2;;;717:6;709;702:22;664:2;745:30;765:9;745:30;:::i;:::-;735:40;654:127;-1:-1:-1;;;654:127:5:o;786:400::-;;;;;947:3;935:9;926:7;922:23;918:33;915:2;;;969:6;961;954:22;915:2;997:30;1017:9;997:30;:::i;:::-;987:40;1074:2;1059:18;;1046:32;;-1:-1:-1;1125:2:5;1110:18;;1097:32;;1176:2;1161:18;1148:32;;-1:-1:-1;905:281:5;-1:-1:-1;;;905:281:5:o;1191:175::-;1335:25;;;1323:2;1308:18;;1290:76::o;1371:603::-;;1512:2;1541;1530:9;1523:21;1573:6;1567:13;1616:6;1611:2;1600:9;1596:18;1589:34;1641:4;1654:140;1668:6;1665:1;1662:13;1654:140;;;1763:14;;;1759:23;;1753:30;1729:17;;;1748:2;1725:26;1718:66;1683:10;;1654:140;;;1812:6;1809:1;1806:13;1803:2;;;1882:4;1877:2;1868:6;1857:9;1853:22;1849:31;1842:45;1803:2;-1:-1:-1;1958:2:5;1937:15;-1:-1:-1;;1933:29:5;1918:45;;;;1965:2;1914:54;;1492:482;-1:-1:-1;;;1492:482:5:o;2161:516::-;2424:22;2473:15;;;2455:34;;2520:2;2505:18;;2498:34;;;;2563:2;2548:18;;2541:34;;;;2606:2;2591:18;;2584:34;2655:15;;;2649:3;2634:19;;2627:44;2401:3;2386:19;;2368:309::o;2682:184::-;2854:4;2842:17;;;;2824:36;;2812:2;2797:18;;2779:87::o;2871:236::-;;-1:-1:-1;;2931:17:5;;2928:2;;;-1:-1:-1;;;2971:33:5;;3027:4;3024:1;3017:15;3057:4;2978:3;3045:17;2928:2;-1:-1:-1;3099:1:5;3088:13;;2918:189::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {}, "notice": "Based on the FluxAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant", "title": "MockV3Aggregator", "version": 1}, "offset": [400, 2755], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8205BF6A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x18B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x4AA2011F EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1EF JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x231 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x3 DUP2 DUP2 SSTORE PUSH1 0x1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 SLOAD DUP4 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x76302E362F74657374732F4D6F636B563341676772656761746F722E736F6C00 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x289 DUP4 PUSH2 0x444 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP4 DUP3 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE SWAP3 SLOAD DUP3 MSTORE PUSH1 0x6 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD DUP4 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x347 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x368 DUP3 PUSH2 0x317 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x384 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x38D DUP6 PUSH2 0x317 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3C0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3ED JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x464 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xDD9C5AE46CC75BB236A0F91ABA13E86B0DD040FD07 CODECOPY CALLDATACOPY 0x5F 0xB6 0xF9 0xBB 0xB3 0xC5 0xAA 0xE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ", "pcMap": {"0": {"offset": [400, 2755], "op": "PUSH1", "path": "4", "value": "0x80"}, "2": {"fn": null, "offset": [400, 2755], "op": "PUSH1", "path": "4", "value": "0x40"}, "4": {"fn": null, "offset": [400, 2755], "op": "MSTORE", "path": "4"}, "5": {"fn": null, "offset": [400, 2755], "op": "CALLVALUE", "path": "4"}, "6": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "7": {"fn": null, "offset": [400, 2755], "op": "ISZERO", "path": "4"}, "8": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x10"}, "11": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "12": {"fn": null, "offset": [400, 2755], "op": "PUSH1", "path": "4", "value": "0x0"}, "14": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [400, 2755], "op": "REVERT", "path": "4"}, "16": {"fn": null, "offset": [400, 2755], "op": "JUMPDEST", "path": "4"}, "17": {"fn": null, "offset": [400, 2755], "op": "POP", "path": "4"}, "18": {"fn": null, "offset": [400, 2755], "op": "PUSH1", "path": "4", "value": "0x4"}, "20": {"fn": null, "offset": [400, 2755], "op": "CALLDATASIZE", "path": "4"}, "21": {"fn": null, "offset": [400, 2755], "op": "LT", "path": "4"}, "22": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0xB4"}, "25": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "26": {"fn": null, "offset": [400, 2755], "op": "PUSH1", "path": "4", "value": "0x0"}, "28": {"fn": null, "offset": [400, 2755], "op": "CALLDATALOAD", "path": "4"}, "29": {"fn": null, "offset": [400, 2755], "op": "PUSH1", "path": "4", "value": "0xE0"}, "31": {"fn": null, "offset": [400, 2755], "op": "SHR", "path": "4"}, "32": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "33": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x8205BF6A"}, "38": {"fn": null, "offset": [400, 2755], "op": "GT", "path": "4"}, "39": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x71"}, "42": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "43": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "44": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x8205BF6A"}, "49": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "50": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x126"}, "53": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "54": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "55": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x9A6FC8F5"}, "60": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "61": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x12E"}, "64": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "65": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "66": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0xA87A20CE"}, "71": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "72": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x152"}, "75": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "76": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "77": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0xB5AB58DC"}, "82": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "83": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x165"}, "86": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "87": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "88": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0xB633620C"}, "93": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "94": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x178"}, "97": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "98": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "99": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0xFEAF968C"}, "104": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "105": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x18B"}, "108": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "109": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0xB4"}, "112": {"fn": null, "offset": [400, 2755], "op": "JUMP", "path": "4"}, "113": {"fn": null, "offset": [400, 2755], "op": "JUMPDEST", "path": "4"}, "114": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "115": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x313CE567"}, "120": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "121": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0xB9"}, "124": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "125": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "126": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x4AA2011F"}, "131": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "132": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0xD7"}, "135": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "136": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "137": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x50D25BCD"}, "142": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "143": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0xEC"}, "146": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "147": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "148": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x54FD4D50"}, "153": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "154": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x101"}, "157": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "158": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "159": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x668A0F02"}, "164": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "165": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x109"}, "168": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "169": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "170": {"fn": null, "offset": [400, 2755], "op": "PUSH4", "path": "4", "value": "0x7284E416"}, "175": {"fn": null, "offset": [400, 2755], "op": "EQ", "path": "4"}, "176": {"fn": null, "offset": [400, 2755], "op": "PUSH2", "path": "4", "value": "0x111"}, "179": {"fn": null, "offset": [400, 2755], "op": "JUMPI", "path": "4"}, "180": {"fn": null, "offset": [400, 2755], "op": "JUMPDEST", "path": "4"}, "181": {"fn": null, "offset": [400, 2755], "op": "PUSH1", "path": "4", "value": "0x0"}, "183": {"fn": null, "offset": [400, 2755], "op": "DUP1", "path": "4"}, "184": {"first_revert": true, "fn": null, "offset": [400, 2755], "op": "REVERT", "path": "4"}, "185": {"offset": [510, 540], "op": "JUMPDEST", "path": "4"}, "186": {"fn": null, "offset": [510, 540], "op": "PUSH2", "path": "4", "value": "0xC1"}, "189": {"fn": null, "offset": [510, 540], "op": "PUSH2", "path": "4", "value": "0x193"}, "192": {"fn": null, "jump": "i", "offset": [510, 540], "op": "JUMP", "path": "4"}, "193": {"fn": null, "offset": [510, 540], "op": "JUMPDEST", "path": "4"}, "194": {"fn": null, "offset": [510, 540], "op": "PUSH1", "path": "4", "value": "0x40"}, "196": {"fn": null, "offset": [510, 540], "op": "MLOAD", "path": "4"}, "197": {"fn": null, "offset": [510, 540], "op": "PUSH2", "path": "4", "value": "0xCE"}, "200": {"fn": null, "offset": [510, 540], "op": "SWAP2", "path": "4"}, "201": {"fn": null, "offset": [510, 540], "op": "SWAP1", "path": "4"}, "202": {"fn": null, "offset": [510, 540], "op": "PUSH2", "path": "4", "value": "0x436"}, "205": {"fn": null, "jump": "i", "offset": [510, 540], "op": "JUMP", "path": "4"}, "206": {"fn": null, "offset": [510, 540], "op": "JUMPDEST", "path": "4"}, "207": {"fn": null, "offset": [510, 540], "op": "PUSH1", "path": "4", "value": "0x40"}, "209": {"fn": null, "offset": [510, 540], "op": "MLOAD", "path": "4"}, "210": {"fn": null, "offset": [510, 540], "op": "DUP1", "path": "4"}, "211": {"fn": null, "offset": [510, 540], "op": "SWAP2", "path": "4"}, "212": {"fn": null, "offset": [510, 540], "op": "SUB", "path": "4"}, "213": {"fn": null, "offset": [510, 540], "op": "SWAP1", "path": "4"}, "214": {"fn": null, "offset": [510, 540], "op": "RETURN", "path": "4"}, "215": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "JUMPDEST", "path": "4"}, "216": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "PUSH2", "path": "4", "value": "0xEA"}, "219": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "PUSH2", "path": "4", "value": "0xE5"}, "222": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "CALLDATASIZE", "path": "4"}, "223": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "PUSH1", "path": "4", "value": "0x4"}, "225": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "PUSH2", "path": "4", "value": "0x36F"}, "228": {"fn": "MockV3Aggregator.updateRoundData", "jump": "i", "offset": [1293, 1683], "op": "JUMP", "path": "4"}, "229": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "JUMPDEST", "path": "4"}, "230": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "PUSH2", "path": "4", "value": "0x19C"}, "233": {"fn": "MockV3Aggregator.updateRoundData", "jump": "i", "offset": [1293, 1683], "op": "JUMP", "path": "4"}, "234": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "JUMPDEST", "path": "4"}, "235": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "STOP", "path": "4"}, "236": {"offset": [546, 581], "op": "JUMPDEST", "path": "4"}, "237": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "PUSH2", "path": "4", "value": "0xF4"}, "240": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "PUSH2", "path": "4", "value": "0x1E9"}, "243": {"fn": "MockV3Aggregator.updateRoundData", "jump": "i", "offset": [546, 581], "op": "JUMP", "path": "4"}, "244": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "JUMPDEST", "path": "4"}, "245": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "PUSH1", "path": "4", "value": "0x40"}, "247": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "MLOAD", "path": "4"}, "248": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "PUSH2", "path": "4", "value": "0xCE"}, "251": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "SWAP2", "path": "4"}, "252": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "SWAP1", "path": "4"}, "253": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "PUSH2", "path": "4", "value": "0x3A7"}, "256": {"fn": "MockV3Aggregator.updateRoundData", "jump": "i", "offset": [546, 581], "op": "JUMP", "path": "4"}, "257": {"offset": [459, 503], "op": "JUMPDEST", "path": "4"}, "258": {"fn": "MockV3Aggregator.updateRoundData", "offset": [459, 503], "op": "PUSH2", "path": "4", "value": "0xF4"}, "261": {"fn": "MockV3Aggregator.updateRoundData", "offset": [459, 503], "op": "PUSH2", "path": "4", "value": "0x1EF"}, "264": {"fn": "MockV3Aggregator.updateRoundData", "jump": "i", "offset": [459, 503], "op": "JUMP", "path": "4"}, "265": {"offset": [632, 667], "op": "JUMPDEST", "path": "4"}, "266": {"fn": "MockV3Aggregator.updateRoundData", "offset": [632, 667], "op": "PUSH2", "path": "4", "value": "0xF4"}, "269": {"fn": "MockV3Aggregator.updateRoundData", "offset": [632, 667], "op": "PUSH2", "path": "4", "value": "0x1F4"}, "272": {"fn": "MockV3Aggregator.updateRoundData", "jump": "i", "offset": [632, 667], "op": "JUMP", "path": "4"}, "273": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "JUMPDEST", "path": "4"}, "274": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "PUSH2", "path": "4", "value": "0x119"}, "277": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "PUSH2", "path": "4", "value": "0x1FA"}, "280": {"fn": "MockV3Aggregator.description", "jump": "i", "offset": [2626, 2753], "op": "JUMP", "path": "4"}, "281": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "JUMPDEST", "path": "4"}, "282": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "PUSH1", "path": "4", "value": "0x40"}, "284": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "MLOAD", "path": "4"}, "285": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "PUSH2", "path": "4", "value": "0xCE"}, "288": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "SWAP2", "path": "4"}, "289": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "SWAP1", "path": "4"}, "290": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "PUSH2", "path": "4", "value": "0x3B0"}, "293": {"fn": "MockV3Aggregator.description", "jump": "i", "offset": [2626, 2753], "op": "JUMP", "path": "4"}, "294": {"offset": [587, 626], "op": "JUMPDEST", "path": "4"}, "295": {"fn": "MockV3Aggregator.description", "offset": [587, 626], "op": "PUSH2", "path": "4", "value": "0xF4"}, "298": {"fn": "MockV3Aggregator.description", "offset": [587, 626], "op": "PUSH2", "path": "4", "value": "0x231"}, "301": {"fn": "MockV3Aggregator.description", "jump": "i", "offset": [587, 626], "op": "JUMP", "path": "4"}, "302": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "JUMPDEST", "path": "4"}, "303": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH2", "path": "4", "value": "0x141"}, "306": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH2", "path": "4", "value": "0x13C"}, "309": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "CALLDATASIZE", "path": "4"}, "310": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH1", "path": "4", "value": "0x4"}, "312": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH2", "path": "4", "value": "0x34E"}, "315": {"fn": "MockV3Aggregator.getRoundData", "jump": "i", "offset": [1689, 2142], "op": "JUMP", "path": "4"}, "316": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "JUMPDEST", "path": "4"}, "317": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH2", "path": "4", "value": "0x237"}, "320": {"fn": "MockV3Aggregator.getRoundData", "jump": "i", "offset": [1689, 2142], "op": "JUMP", "path": "4"}, "321": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "JUMPDEST", "path": "4"}, "322": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH1", "path": "4", "value": "0x40"}, "324": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "MLOAD", "path": "4"}, "325": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH2", "path": "4", "value": "0xCE"}, "328": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "SWAP6", "path": "4"}, "329": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "SWAP5", "path": "4"}, "330": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "SWAP4", "path": "4"}, "331": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "SWAP3", "path": "4"}, "332": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "SWAP2", "path": "4"}, "333": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "SWAP1", "path": "4"}, "334": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "PUSH2", "path": "4", "value": "0x403"}, "337": {"fn": "MockV3Aggregator.getRoundData", "jump": "i", "offset": [1689, 2142], "op": "JUMP", "path": "4"}, "338": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "JUMPDEST", "path": "4"}, "339": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "PUSH2", "path": "4", "value": "0xEA"}, "342": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "PUSH2", "path": "4", "value": "0x160"}, "345": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "CALLDATASIZE", "path": "4"}, "346": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "PUSH1", "path": "4", "value": "0x4"}, "348": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "PUSH2", "path": "4", "value": "0x336"}, "351": {"fn": "MockV3Aggregator.updateAnswer", "jump": "i", "offset": [989, 1287], "op": "JUMP", "path": "4"}, "352": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "JUMPDEST", "path": "4"}, "353": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "PUSH2", "path": "4", "value": "0x270"}, "356": {"fn": "MockV3Aggregator.updateAnswer", "jump": "i", "offset": [989, 1287], "op": "JUMP", "path": "4"}, "357": {"offset": [674, 726], "op": "JUMPDEST", "path": "4"}, "358": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH2", "path": "4", "value": "0xF4"}, "361": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH2", "path": "4", "value": "0x173"}, "364": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "CALLDATASIZE", "path": "4"}, "365": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH1", "path": "4", "value": "0x4"}, "367": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH2", "path": "4", "value": "0x336"}, "370": {"fn": "MockV3Aggregator.updateAnswer", "jump": "i", "offset": [674, 726], "op": "JUMP", "path": "4"}, "371": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "JUMPDEST", "path": "4"}, "372": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH2", "path": "4", "value": "0x2C6"}, "375": {"fn": "MockV3Aggregator.updateAnswer", "jump": "i", "offset": [674, 726], "op": "JUMP", "path": "4"}, "376": {"offset": [732, 788], "op": "JUMPDEST", "path": "4"}, "377": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH2", "path": "4", "value": "0xF4"}, "380": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH2", "path": "4", "value": "0x186"}, "383": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "CALLDATASIZE", "path": "4"}, "384": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH1", "path": "4", "value": "0x4"}, "386": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH2", "path": "4", "value": "0x336"}, "389": {"fn": "MockV3Aggregator.updateAnswer", "jump": "i", "offset": [732, 788], "op": "JUMP", "path": "4"}, "390": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "JUMPDEST", "path": "4"}, "391": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH2", "path": "4", "value": "0x2D8"}, "394": {"fn": "MockV3Aggregator.updateAnswer", "jump": "i", "offset": [732, 788], "op": "JUMP", "path": "4"}, "395": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "JUMPDEST", "path": "4"}, "396": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "PUSH2", "path": "4", "value": "0x141"}, "399": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "PUSH2", "path": "4", "value": "0x2EA"}, "402": {"fn": "MockV3Aggregator.latestRoundData", "jump": "i", "offset": [2148, 2620], "op": "JUMP", "path": "4"}, "403": {"offset": [510, 540], "op": "JUMPDEST", "path": "4"}, "404": {"fn": "MockV3Aggregator.latestRoundData", "offset": [510, 540], "op": "PUSH1", "path": "4", "value": "0x0"}, "406": {"fn": "MockV3Aggregator.latestRoundData", "offset": [510, 540], "op": "SLOAD", "path": "4"}, "407": {"fn": "MockV3Aggregator.latestRoundData", "offset": [510, 540], "op": "PUSH1", "path": "4", "value": "0xFF"}, "409": {"fn": "MockV3Aggregator.latestRoundData", "offset": [510, 540], "op": "AND", "path": "4"}, "410": {"fn": "MockV3Aggregator.latestRoundData", "offset": [510, 540], "op": "DUP2", "path": "4"}, "411": {"fn": "MockV3Aggregator.latestRoundData", "jump": "o", "offset": [510, 540], "op": "JUMP", "path": "4"}, "412": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1293, 1683], "op": "JUMPDEST", "path": "4"}, "413": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1468], "op": "PUSH10", "path": "4", "statement": 0, "value": "0xFFFFFFFFFFFFFFFFFFFF"}, "424": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1468], "op": "SWAP1", "path": "4"}, "425": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1468], "op": "SWAP4", "path": "4"}, "426": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1468], "op": "AND", "path": "4"}, "427": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1457], "op": "PUSH1", "path": "4", "value": "0x3"}, "429": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1468], "op": "DUP2", "path": "4"}, "430": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1468], "op": "DUP2", "path": "4"}, "431": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1446, 1468], "op": "SSTORE", "path": "4"}, "432": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1478, 1490], "op": "PUSH1", "path": "4", "statement": 1, "value": "0x1"}, "434": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1478, 1500], "op": "DUP5", "path": "4"}, "435": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1478, 1500], "op": "SWAP1", "path": "4"}, "436": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1478, 1500], "op": "SSTORE", "path": "4"}, "437": {"op": "PUSH1", "value": "0x2"}, "439": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1510, 1538], "op": "DUP4", "path": "4", "statement": 2}, "440": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1510, 1538], "op": "SWAP1", "path": "4"}, "441": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1510, 1538], "op": "SSTORE", "path": "4"}, "442": {"op": "PUSH1", "value": "0x0"}, "444": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "SWAP2", "path": "4", "statement": 3}, "445": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "DUP3", "path": "4"}, "446": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "MSTORE", "path": "4"}, "447": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1557], "op": "PUSH1", "path": "4", "value": "0x4"}, "449": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "PUSH1", "path": "4", "value": "0x20"}, "451": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "SWAP1", "path": "4"}, "452": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "DUP2", "path": "4"}, "453": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "MSTORE", "path": "4"}, "454": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "PUSH1", "path": "4", "value": "0x40"}, "456": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "DUP1", "path": "4"}, "457": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "DUP5", "path": "4"}, "458": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1570], "op": "KECCAK256", "path": "4"}, "459": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1580], "op": "SWAP6", "path": "4"}, "460": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1580], "op": "SWAP1", "path": "4"}, "461": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1580], "op": "SWAP6", "path": "4"}, "462": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1548, 1580], "op": "SSTORE", "path": "4"}, "463": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1603, 1614], "op": "DUP2", "path": "4", "statement": 4}, "464": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1603, 1614], "op": "SLOAD", "path": "4"}, "465": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1615], "op": "DUP4", "path": "4"}, "466": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1615], "op": "MSTORE", "path": "4"}, "467": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1602], "op": "PUSH1", "path": "4", "value": "0x5"}, "469": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1615], "op": "DUP2", "path": "4"}, "470": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1615], "op": "MSTORE", "path": "4"}, "471": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1615], "op": "DUP5", "path": "4"}, "472": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1615], "op": "DUP4", "path": "4"}, "473": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1615], "op": "KECCAK256", "path": "4"}, "474": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1628], "op": "SWAP4", "path": "4"}, "475": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1628], "op": "SWAP1", "path": "4"}, "476": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1628], "op": "SWAP4", "path": "4"}, "477": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1590, 1628], "op": "SSTORE", "path": "4"}, "478": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1651, 1662], "op": "SLOAD", "path": "4", "statement": 5}, "479": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1663], "op": "DUP2", "path": "4"}, "480": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1663], "op": "MSTORE", "path": "4"}, "481": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1650], "op": "PUSH1", "path": "4", "value": "0x6"}, "483": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1663], "op": "SWAP1", "path": "4"}, "484": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1663], "op": "SWAP2", "path": "4"}, "485": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1663], "op": "MSTORE", "path": "4"}, "486": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1663], "op": "KECCAK256", "path": "4"}, "487": {"fn": "MockV3Aggregator.updateRoundData", "offset": [1638, 1676], "op": "SSTORE", "path": "4"}, "488": {"fn": "MockV3Aggregator.updateRoundData", "jump": "o", "offset": [1293, 1683], "op": "JUMP", "path": "4"}, "489": {"offset": [546, 581], "op": "JUMPDEST", "path": "4"}, "490": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "PUSH1", "path": "4", "value": "0x1"}, "492": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "SLOAD", "path": "4"}, "493": {"fn": "MockV3Aggregator.updateRoundData", "offset": [546, 581], "op": "DUP2", "path": "4"}, "494": {"fn": "MockV3Aggregator.updateRoundData", "jump": "o", "offset": [546, 581], "op": "JUMP", "path": "4"}, "495": {"offset": [459, 503], "op": "JUMPDEST", "path": "4"}, "496": {"offset": [502, 503], "op": "PUSH1", "path": "4", "value": "0x0"}, "498": {"offset": [459, 503], "op": "DUP2", "path": "4"}, "499": {"fn": "MockV3Aggregator.updateRoundData", "jump": "o", "offset": [459, 503], "op": "JUMP", "path": "4"}, "500": {"offset": [632, 667], "op": "JUMPDEST", "path": "4"}, "501": {"fn": "MockV3Aggregator.updateRoundData", "offset": [632, 667], "op": "PUSH1", "path": "4", "value": "0x3"}, "503": {"fn": "MockV3Aggregator.updateRoundData", "offset": [632, 667], "op": "SLOAD", "path": "4"}, "504": {"fn": "MockV3Aggregator.updateRoundData", "offset": [632, 667], "op": "DUP2", "path": "4"}, "505": {"fn": "MockV3Aggregator.updateRoundData", "jump": "o", "offset": [632, 667], "op": "JUMP", "path": "4"}, "506": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "JUMPDEST", "path": "4"}, "507": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "PUSH1", "path": "4", "statement": 6, "value": "0x40"}, "509": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "DUP1", "path": "4"}, "510": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "MLOAD", "path": "4"}, "511": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "DUP1", "path": "4"}, "512": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "DUP3", "path": "4"}, "513": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "ADD", "path": "4"}, "514": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "SWAP1", "path": "4"}, "515": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "SWAP2", "path": "4"}, "516": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "MSTORE", "path": "4"}, "517": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "PUSH1", "path": "4", "value": "0x1F"}, "519": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "DUP2", "path": "4"}, "520": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "MSTORE", "path": "4"}, "521": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "PUSH32", "path": "4", "value": "0x76302E362F74657374732F4D6F636B563341676772656761746F722E736F6C00"}, "554": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "PUSH1", "path": "4", "value": "0x20"}, "556": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "DUP3", "path": "4"}, "557": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "ADD", "path": "4"}, "558": {"fn": "MockV3Aggregator.description", "offset": [2706, 2746], "op": "MSTORE", "path": "4"}, "559": {"fn": "MockV3Aggregator.description", "offset": [2626, 2753], "op": "SWAP1", "path": "4"}, "560": {"fn": "MockV3Aggregator.description", "jump": "o", "offset": [2626, 2753], "op": "JUMP", "path": "4"}, "561": {"offset": [587, 626], "op": "JUMPDEST", "path": "4"}, "562": {"fn": "MockV3Aggregator.description", "offset": [587, 626], "op": "PUSH1", "path": "4", "value": "0x2"}, "564": {"fn": "MockV3Aggregator.description", "offset": [587, 626], "op": "SLOAD", "path": "4"}, "565": {"fn": "MockV3Aggregator.description", "offset": [587, 626], "op": "DUP2", "path": "4"}, "566": {"fn": "MockV3Aggregator.description", "jump": "o", "offset": [587, 626], "op": "JUMP", "path": "4"}, "567": {"fn": "MockV3Aggregator.getRoundData", "offset": [1689, 2142], "op": "JUMPDEST", "path": "4"}, "568": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "PUSH10", "path": "4", "statement": 7, "value": "0xFFFFFFFFFFFFFFFFFFFF"}, "579": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "DUP2", "path": "4"}, "580": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "AND", "path": "4"}, "581": {"fn": "MockV3Aggregator.getRoundData", "offset": [1805, 1819], "op": "PUSH1", "path": "4", "value": "0x0"}, "583": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SWAP1", "path": "4"}, "584": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "DUP2", "path": "4"}, "585": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "MSTORE", "path": "4"}, "586": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2021], "op": "PUSH1", "path": "4", "value": "0x4"}, "588": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "PUSH1", "path": "4", "value": "0x20"}, "590": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SWAP1", "path": "4"}, "591": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "DUP2", "path": "4"}, "592": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "MSTORE", "path": "4"}, "593": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "PUSH1", "path": "4", "value": "0x40"}, "595": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "DUP1", "path": "4"}, "596": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "DUP4", "path": "4"}, "597": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "KECCAK256", "path": "4"}, "598": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SLOAD", "path": "4"}, "599": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2057], "op": "PUSH1", "path": "4", "value": "0x6"}, "601": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "DUP4", "path": "4"}, "602": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "MSTORE", "path": "4"}, "603": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "DUP2", "path": "4"}, "604": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "DUP5", "path": "4"}, "605": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "KECCAK256", "path": "4"}, "606": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "SLOAD", "path": "4"}, "607": {"fn": "MockV3Aggregator.getRoundData", "offset": [2081, 2093], "op": "PUSH1", "path": "4", "value": "0x5"}, "609": {"fn": "MockV3Aggregator.getRoundData", "offset": [2081, 2103], "op": "SWAP1", "path": "4"}, "610": {"fn": "MockV3Aggregator.getRoundData", "offset": [2081, 2103], "op": "SWAP4", "path": "4"}, "611": {"fn": "MockV3Aggregator.getRoundData", "offset": [2081, 2103], "op": "MSTORE", "path": "4"}, "612": {"fn": "MockV3Aggregator.getRoundData", "offset": [2081, 2103], "op": "SWAP3", "path": "4"}, "613": {"fn": "MockV3Aggregator.getRoundData", "offset": [2081, 2103], "op": "KECCAK256", "path": "4"}, "614": {"fn": "MockV3Aggregator.getRoundData", "offset": [2081, 2103], "op": "SLOAD", "path": "4"}, "615": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SWAP3", "path": "4"}, "616": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SWAP4", "path": "4"}, "617": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SWAP2", "path": "4"}, "618": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SWAP3", "path": "4"}, "619": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "SWAP1", "path": "4"}, "620": {"fn": "MockV3Aggregator.getRoundData", "offset": [2045, 2067], "op": "SWAP2", "path": "4"}, "621": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "DUP5", "path": "4"}, "622": {"fn": "MockV3Aggregator.getRoundData", "offset": [2012, 2031], "op": "SWAP1", "path": "4"}, "623": {"fn": "MockV3Aggregator.getRoundData", "jump": "o", "offset": [1689, 2142], "op": "JUMP", "path": "4"}, "624": {"fn": "MockV3Aggregator.updateAnswer", "offset": [989, 1287], "op": "JUMPDEST", "path": "4"}, "625": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1044, 1056], "op": "PUSH1", "path": "4", "statement": 8, "value": "0x1"}, "627": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1044, 1066], "op": "DUP2", "path": "4"}, "628": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1044, 1066], "op": "SWAP1", "path": "4"}, "629": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1044, 1066], "op": "SSTORE", "path": "4"}, "630": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1094, 1109], "op": "TIMESTAMP", "path": "4", "statement": 9}, "631": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1076, 1091], "op": "PUSH1", "path": "4", "value": "0x2"}, "633": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1076, 1109], "op": "SSTORE", "path": "4"}, "634": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1130], "op": "PUSH1", "path": "4", "statement": 10, "value": "0x3"}, "636": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "DUP1", "path": "4"}, "637": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "SLOAD", "path": "4"}, "638": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "SWAP1", "path": "4"}, "639": {"op": "PUSH1", "value": "0x0"}, "641": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "PUSH2", "path": "4", "value": "0x289"}, "644": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "DUP4", "path": "4"}, "645": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "PUSH2", "path": "4", "value": "0x444"}, "648": {"fn": "MockV3Aggregator.updateAnswer", "jump": "i", "offset": [1119, 1132], "op": "JUMP", "path": "4"}, "649": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "JUMPDEST", "path": "4"}, "650": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "SWAP1", "path": "4"}, "651": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "SWAP2", "path": "4"}, "652": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1119, 1132], "op": "SSTORE", "path": "4"}, "653": {"op": "POP"}, "654": {"op": "POP"}, "655": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1152, 1163], "op": "PUSH1", "path": "4", "statement": 11, "value": "0x3"}, "657": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1152, 1163], "op": "DUP1", "path": "4"}, "658": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1152, 1163], "op": "SLOAD", "path": "4"}, "659": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "PUSH1", "path": "4", "value": "0x0"}, "661": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "SWAP1", "path": "4"}, "662": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "DUP2", "path": "4"}, "663": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "MSTORE", "path": "4"}, "664": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1151], "op": "PUSH1", "path": "4", "value": "0x4"}, "666": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "PUSH1", "path": "4", "value": "0x20"}, "668": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "SWAP1", "path": "4"}, "669": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "DUP2", "path": "4"}, "670": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "MSTORE", "path": "4"}, "671": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "PUSH1", "path": "4", "value": "0x40"}, "673": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "DUP1", "path": "4"}, "674": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "DUP4", "path": "4"}, "675": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1164], "op": "KECCAK256", "path": "4"}, "676": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1174], "op": "SWAP5", "path": "4"}, "677": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1174], "op": "SWAP1", "path": "4"}, "678": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1174], "op": "SWAP5", "path": "4"}, "679": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1142, 1174], "op": "SSTORE", "path": "4"}, "680": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1197, 1208], "op": "DUP3", "path": "4", "statement": 12}, "681": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1197, 1208], "op": "SLOAD", "path": "4"}, "682": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1209], "op": "DUP3", "path": "4"}, "683": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1209], "op": "MSTORE", "path": "4"}, "684": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1196], "op": "PUSH1", "path": "4", "value": "0x5"}, "686": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1209], "op": "DUP2", "path": "4"}, "687": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1209], "op": "MSTORE", "path": "4"}, "688": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1209], "op": "DUP4", "path": "4"}, "689": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1209], "op": "DUP3", "path": "4"}, "690": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1209], "op": "KECCAK256", "path": "4"}, "691": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1212, 1227], "op": "TIMESTAMP", "path": "4"}, "692": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1227], "op": "SWAP1", "path": "4"}, "693": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1227], "op": "DUP2", "path": "4"}, "694": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1227], "op": "SWAP1", "path": "4"}, "695": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1184, 1227], "op": "SSTORE", "path": "4"}, "696": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1250, 1261], "op": "SWAP3", "path": "4", "statement": 13}, "697": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1250, 1261], "op": "SLOAD", "path": "4"}, "698": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "DUP3", "path": "4"}, "699": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "MSTORE", "path": "4"}, "700": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1249], "op": "PUSH1", "path": "4", "value": "0x6"}, "702": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "SWAP1", "path": "4"}, "703": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "MSTORE", "path": "4"}, "704": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "SWAP2", "path": "4"}, "705": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "SWAP1", "path": "4"}, "706": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "SWAP2", "path": "4"}, "707": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1262], "op": "KECCAK256", "path": "4"}, "708": {"fn": "MockV3Aggregator.updateAnswer", "offset": [1237, 1280], "op": "SSTORE", "path": "4"}, "709": {"fn": "MockV3Aggregator.updateAnswer", "jump": "o", "offset": [989, 1287], "op": "JUMP", "path": "4"}, "710": {"offset": [674, 726], "op": "JUMPDEST", "path": "4"}, "711": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH1", "path": "4", "value": "0x4"}, "713": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH1", "path": "4", "value": "0x20"}, "715": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "MSTORE", "path": "4"}, "716": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH1", "path": "4", "value": "0x0"}, "718": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "SWAP1", "path": "4"}, "719": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "DUP2", "path": "4"}, "720": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "MSTORE", "path": "4"}, "721": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "PUSH1", "path": "4", "value": "0x40"}, "723": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "SWAP1", "path": "4"}, "724": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "KECCAK256", "path": "4"}, "725": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "SLOAD", "path": "4"}, "726": {"fn": "MockV3Aggregator.updateAnswer", "offset": [674, 726], "op": "DUP2", "path": "4"}, "727": {"fn": "MockV3Aggregator.updateAnswer", "jump": "o", "offset": [674, 726], "op": "JUMP", "path": "4"}, "728": {"offset": [732, 788], "op": "JUMPDEST", "path": "4"}, "729": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH1", "path": "4", "value": "0x5"}, "731": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH1", "path": "4", "value": "0x20"}, "733": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "MSTORE", "path": "4"}, "734": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH1", "path": "4", "value": "0x0"}, "736": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "SWAP1", "path": "4"}, "737": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "DUP2", "path": "4"}, "738": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "MSTORE", "path": "4"}, "739": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "PUSH1", "path": "4", "value": "0x40"}, "741": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "SWAP1", "path": "4"}, "742": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "KECCAK256", "path": "4"}, "743": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "SLOAD", "path": "4"}, "744": {"fn": "MockV3Aggregator.updateAnswer", "offset": [732, 788], "op": "DUP2", "path": "4"}, "745": {"fn": "MockV3Aggregator.updateAnswer", "jump": "o", "offset": [732, 788], "op": "JUMP", "path": "4"}, "746": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "JUMPDEST", "path": "4"}, "747": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2444, 2455], "op": "PUSH1", "path": "4", "statement": 14, "value": "0x3"}, "749": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2444, 2455], "op": "SLOAD", "path": "4"}, "750": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2252, 2266], "op": "PUSH1", "path": "4", "value": "0x0"}, "752": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "DUP2", "path": "4"}, "753": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "DUP2", "path": "4"}, "754": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "MSTORE", "path": "4"}, "755": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2479], "op": "PUSH1", "path": "4", "value": "0x4"}, "757": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "PUSH1", "path": "4", "value": "0x20"}, "759": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "SWAP1", "path": "4"}, "760": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "DUP2", "path": "4"}, "761": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "MSTORE", "path": "4"}, "762": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "PUSH1", "path": "4", "value": "0x40"}, "764": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "DUP1", "path": "4"}, "765": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "DUP4", "path": "4"}, "766": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "KECCAK256", "path": "4"}, "767": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2470, 2492], "op": "SLOAD", "path": "4"}, "768": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2506, 2518], "op": "PUSH1", "path": "4", "value": "0x6"}, "770": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2506, 2531], "op": "DUP4", "path": "4"}, "771": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2506, 2531], "op": "MSTORE", "path": "4"}, "772": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2506, 2531], "op": "DUP2", "path": "4"}, "773": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2506, 2531], "op": "DUP5", "path": "4"}, "774": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2506, 2531], "op": "KECCAK256", "path": "4"}, "775": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2506, 2531], "op": "SLOAD", "path": "4"}, "776": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2545, 2557], "op": "PUSH1", "path": "4", "value": "0x5"}, "778": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2545, 2570], "op": "SWAP1", "path": "4"}, "779": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2545, 2570], "op": "SWAP4", "path": "4"}, "780": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2545, 2570], "op": "MSTORE", "path": "4"}, "781": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2545, 2570], "op": "SWAP3", "path": "4"}, "782": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2545, 2570], "op": "KECCAK256", "path": "4"}, "783": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2545, 2570], "op": "SLOAD", "path": "4"}, "784": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2444, 2455], "op": "DUP4", "path": "4"}, "785": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "SWAP1", "path": "4"}, "786": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "SWAP2", "path": "4"}, "787": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "SWAP3", "path": "4"}, "788": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "SWAP4", "path": "4"}, "789": {"fn": "MockV3Aggregator.latestRoundData", "offset": [2148, 2620], "op": "SWAP5", "path": "4"}, "790": {"fn": "MockV3Aggregator.latestRoundData", "jump": "o", "offset": [2148, 2620], "op": "JUMP", "path": "4"}, "791": {"op": "JUMPDEST"}, "792": {"op": "DUP1"}, "793": {"op": "CALLDATALOAD"}, "794": {"op": "PUSH10", "value": "0xFFFFFFFFFFFFFFFFFFFF"}, "805": {"op": "DUP2"}, "806": {"op": "AND"}, "807": {"op": "DUP2"}, "808": {"op": "EQ"}, "809": {"op": "PUSH2", "value": "0x331"}, "812": {"op": "JUMPI"}, "813": {"op": "PUSH1", "value": "0x0"}, "815": {"op": "DUP1"}, "816": {"op": "REVERT"}, "817": {"op": "JUMPDEST"}, "818": {"op": "SWAP2"}, "819": {"op": "SWAP1"}, "820": {"op": "POP"}, "821": {"jump": "o", "op": "JUMP"}, "822": {"op": "JUMPDEST"}, "823": {"op": "PUSH1", "value": "0x0"}, "825": {"op": "PUSH1", "value": "0x20"}, "827": {"op": "DUP3"}, "828": {"op": "DUP5"}, "829": {"op": "SUB"}, "830": {"op": "SLT"}, "831": {"op": "ISZERO"}, "832": {"op": "PUSH2", "value": "0x347"}, "835": {"op": "JUMPI"}, "836": {"op": "DUP1"}, "837": {"op": "DUP2"}, "838": {"op": "REVERT"}, "839": {"op": "JUMPDEST"}, "840": {"op": "POP"}, "841": {"op": "CALLDATALOAD"}, "842": {"op": "SWAP2"}, "843": {"op": "SWAP1"}, "844": {"op": "POP"}, "845": {"jump": "o", "op": "JUMP"}, "846": {"op": "JUMPDEST"}, "847": {"op": "PUSH1", "value": "0x0"}, "849": {"op": "PUSH1", "value": "0x20"}, "851": {"op": "DUP3"}, "852": {"op": "DUP5"}, "853": {"op": "SUB"}, "854": {"op": "SLT"}, "855": {"op": "ISZERO"}, "856": {"op": "PUSH2", "value": "0x35F"}, "859": {"op": "JUMPI"}, "860": {"op": "DUP1"}, "861": {"op": "DUP2"}, "862": {"op": "REVERT"}, "863": {"op": "JUMPDEST"}, "864": {"op": "PUSH2", "value": "0x368"}, "867": {"op": "DUP3"}, "868": {"op": "PUSH2", "value": "0x317"}, "871": {"jump": "i", "op": "JUMP"}, "872": {"op": "JUMPDEST"}, "873": {"op": "SWAP4"}, "874": {"op": "SWAP3"}, "875": {"op": "POP"}, "876": {"op": "POP"}, "877": {"op": "POP"}, "878": {"jump": "o", "op": "JUMP"}, "879": {"op": "JUMPDEST"}, "880": {"op": "PUSH1", "value": "0x0"}, "882": {"op": "DUP1"}, "883": {"op": "PUSH1", "value": "0x0"}, "885": {"op": "DUP1"}, "886": {"op": "PUSH1", "value": "0x80"}, "888": {"op": "DUP6"}, "889": {"op": "DUP8"}, "890": {"op": "SUB"}, "891": {"op": "SLT"}, "892": {"op": "ISZERO"}, "893": {"op": "PUSH2", "value": "0x384"}, "896": {"op": "JUMPI"}, "897": {"op": "DUP3"}, "898": {"op": "DUP4"}, "899": {"op": "REVERT"}, "900": {"op": "JUMPDEST"}, "901": {"op": "PUSH2", "value": "0x38D"}, "904": {"op": "DUP6"}, "905": {"op": "PUSH2", "value": "0x317"}, "908": {"jump": "i", "op": "JUMP"}, "909": {"op": "JUMPDEST"}, "910": {"op": "SWAP7"}, "911": {"op": "PUSH1", "value": "0x20"}, "913": {"op": "DUP7"}, "914": {"op": "ADD"}, "915": {"op": "CALLDATALOAD"}, "916": {"op": "SWAP7"}, "917": {"op": "POP"}, "918": {"op": "PUSH1", "value": "0x40"}, "920": {"op": "DUP7"}, "921": {"op": "ADD"}, "922": {"op": "CALLDATALOAD"}, "923": {"op": "SWAP6"}, "924": {"op": "PUSH1", "value": "0x60"}, "926": {"op": "ADD"}, "927": {"op": "CALLDATALOAD"}, "928": {"op": "SWAP5"}, "929": {"op": "POP"}, "930": {"op": "SWAP3"}, "931": {"op": "POP"}, "932": {"op": "POP"}, "933": {"op": "POP"}, "934": {"jump": "o", "op": "JUMP"}, "935": {"op": "JUMPDEST"}, "936": {"op": "SWAP1"}, "937": {"op": "DUP2"}, "938": {"op": "MSTORE"}, "939": {"op": "PUSH1", "value": "0x20"}, "941": {"op": "ADD"}, "942": {"op": "SWAP1"}, "943": {"jump": "o", "op": "JUMP"}, "944": {"op": "JUMPDEST"}, "945": {"op": "PUSH1", "value": "0x0"}, "947": {"op": "PUSH1", "value": "0x20"}, "949": {"op": "DUP1"}, "950": {"op": "DUP4"}, "951": {"op": "MSTORE"}, "952": {"op": "DUP4"}, "953": {"op": "MLOAD"}, "954": {"op": "DUP1"}, "955": {"op": "DUP3"}, "956": {"op": "DUP6"}, "957": {"op": "ADD"}, "958": {"op": "MSTORE"}, "959": {"op": "DUP3"}, "960": {"op": "JUMPDEST"}, "961": {"op": "DUP2"}, "962": {"op": "DUP2"}, "963": {"op": "LT"}, "964": {"op": "ISZERO"}, "965": {"op": "PUSH2", "value": "0x3DC"}, "968": {"op": "JUMPI"}, "969": {"op": "DUP6"}, "970": {"op": "DUP2"}, "971": {"op": "ADD"}, "972": {"op": "DUP4"}, "973": {"op": "ADD"}, "974": {"op": "MLOAD"}, "975": {"op": "DUP6"}, "976": {"op": "DUP3"}, "977": {"op": "ADD"}, "978": {"op": "PUSH1", "value": "0x40"}, "980": {"op": "ADD"}, "981": {"op": "MSTORE"}, "982": {"op": "DUP3"}, "983": {"op": "ADD"}, "984": {"op": "PUSH2", "value": "0x3C0"}, "987": {"op": "JUMP"}, "988": {"op": "JUMPDEST"}, "989": {"op": "DUP2"}, "990": {"op": "DUP2"}, "991": {"op": "GT"}, "992": {"op": "ISZERO"}, "993": {"op": "PUSH2", "value": "0x3ED"}, "996": {"op": "JUMPI"}, "997": {"op": "DUP4"}, "998": {"op": "PUSH1", "value": "0x40"}, "1000": {"op": "DUP4"}, "1001": {"op": "DUP8"}, "1002": {"op": "ADD"}, "1003": {"op": "ADD"}, "1004": {"op": "MSTORE"}, "1005": {"op": "JUMPDEST"}, "1006": {"op": "POP"}, "1007": {"op": "PUSH1", "value": "0x1F"}, "1009": {"op": "ADD"}, "1010": {"op": "PUSH1", "value": "0x1F"}, "1012": {"op": "NOT"}, "1013": {"op": "AND"}, "1014": {"op": "SWAP3"}, "1015": {"op": "SWAP1"}, "1016": {"op": "SWAP3"}, "1017": {"op": "ADD"}, "1018": {"op": "PUSH1", "value": "0x40"}, "1020": {"op": "ADD"}, "1021": {"op": "SWAP4"}, "1022": {"op": "SWAP3"}, "1023": {"op": "POP"}, "1024": {"op": "POP"}, "1025": {"op": "POP"}, "1026": {"jump": "o", "op": "JUMP"}, "1027": {"op": "JUMPDEST"}, "1028": {"op": "PUSH10", "value": "0xFFFFFFFFFFFFFFFFFFFF"}, "1039": {"op": "SWAP6"}, "1040": {"op": "DUP7"}, "1041": {"op": "AND"}, "1042": {"op": "DUP2"}, "1043": {"op": "MSTORE"}, "1044": {"op": "PUSH1", "value": "0x20"}, "1046": {"op": "DUP2"}, "1047": {"op": "ADD"}, "1048": {"op": "SWAP5"}, "1049": {"op": "SWAP1"}, "1050": {"op": "SWAP5"}, "1051": {"op": "MSTORE"}, "1052": {"op": "PUSH1", "value": "0x40"}, "1054": {"op": "DUP5"}, "1055": {"op": "ADD"}, "1056": {"op": "SWAP3"}, "1057": {"op": "SWAP1"}, "1058": {"op": "SWAP3"}, "1059": {"op": "MSTORE"}, "1060": {"op": "PUSH1", "value": "0x60"}, "1062": {"op": "DUP4"}, "1063": {"op": "ADD"}, "1064": {"op": "MSTORE"}, "1065": {"op": "SWAP1"}, "1066": {"op": "SWAP2"}, "1067": {"op": "AND"}, "1068": {"op": "PUSH1", "value": "0x80"}, "1070": {"op": "DUP3"}, "1071": {"op": "ADD"}, "1072": {"op": "MSTORE"}, "1073": {"op": "PUSH1", "value": "0xA0"}, "1075": {"op": "ADD"}, "1076": {"op": "SWAP1"}, "1077": {"jump": "o", "op": "JUMP"}, "1078": {"op": "JUMPDEST"}, "1079": {"op": "PUSH1", "value": "0xFF"}, "1081": {"op": "SWAP2"}, "1082": {"op": "SWAP1"}, "1083": {"op": "SWAP2"}, "1084": {"op": "AND"}, "1085": {"op": "DUP2"}, "1086": {"op": "MSTORE"}, "1087": {"op": "PUSH1", "value": "0x20"}, "1089": {"op": "ADD"}, "1090": {"op": "SWAP1"}, "1091": {"jump": "o", "op": "JUMP"}, "1092": {"op": "JUMPDEST"}, "1093": {"op": "PUSH1", "value": "0x0"}, "1095": {"op": "PUSH1", "value": "0x0"}, "1097": {"op": "NOT"}, "1098": {"op": "DUP3"}, "1099": {"op": "EQ"}, "1100": {"op": "ISZERO"}, "1101": {"op": "PUSH2", "value": "0x464"}, "1104": {"op": "JUMPI"}, "1105": {"op": "PUSH4", "value": "0x4E487B71"}, "1110": {"op": "PUSH1", "value": "0xE0"}, "1112": {"op": "SHL"}, "1113": {"op": "DUP2"}, "1114": {"op": "MSTORE"}, "1115": {"op": "PUSH1", "value": "0x11"}, "1117": {"op": "PUSH1", "value": "0x4"}, "1119": {"op": "MSTORE"}, "1120": {"op": "PUSH1", "value": "0x24"}, "1122": {"op": "DUP2"}, "1123": {"op": "REVERT"}, "1124": {"op": "JUMPDEST"}, "1125": {"op": "POP"}, "1126": {"op": "PUSH1", "value": "0x1"}, "1128": {"op": "ADD"}, "1129": {"op": "SWAP1"}, "1130": {"jump": "o", "op": "JUMP"}}, "sha1": "13b40bc2be4d7694eb38879d49ee249772909b37", "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\";\n\n/**\n * @title MockV3Aggregator\n * @notice Based on the FluxAggregator contract\n * @notice Use this contract when you need to test\n * other contract's ability to read data from an\n * aggregator contract, but how the aggregator got\n * its answer is unimportant\n */\ncontract MockV3Aggregator is AggregatorV2V3Interface {\n    uint256 public constant override version = 0;\n\n    uint8 public override decimals;\n    int256 public override latestAnswer;\n    uint256 public override latestTimestamp;\n    uint256 public override latestRound;\n\n    mapping(uint256 => int256) public override getAnswer;\n    mapping(uint256 => uint256) public override getTimestamp;\n    mapping(uint256 => uint256) private getStartedAt;\n\n    constructor(uint8 _decimals, int256 _initialAnswer) public {\n        decimals = _decimals;\n        updateAnswer(_initialAnswer);\n    }\n\n    function updateAnswer(int256 _answer) public {\n        latestAnswer = _answer;\n        latestTimestamp = block.timestamp;\n        latestRound++;\n        getAnswer[latestRound] = _answer;\n        getTimestamp[latestRound] = block.timestamp;\n        getStartedAt[latestRound] = block.timestamp;\n    }\n\n    function updateRoundData(\n        uint80 _roundId,\n        int256 _answer,\n        uint256 _timestamp,\n        uint256 _startedAt\n    ) public {\n        latestRound = _roundId;\n        latestAnswer = _answer;\n        latestTimestamp = _timestamp;\n        getAnswer[latestRound] = _answer;\n        getTimestamp[latestRound] = _timestamp;\n        getStartedAt[latestRound] = _startedAt;\n    }\n\n    function getRoundData(uint80 _roundId)\n        external\n        view\n        override\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        )\n    {\n        return (\n            _roundId,\n            getAnswer[_roundId],\n            getStartedAt[_roundId],\n            getTimestamp[_roundId],\n            _roundId\n        );\n    }\n\n    function latestRoundData()\n        external\n        view\n        override\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        )\n    {\n        return (\n            uint80(latestRound),\n            getAnswer[latestRound],\n            getStartedAt[latestRound],\n            getTimestamp[latestRound],\n            uint80(latestRound)\n        );\n    }\n\n    function description() external view override returns (string memory) {\n        return \"v0.6/tests/MockV3Aggregator.sol\";\n    }\n}\n\n// MockOracle\n// Function signatures, event signatures, log topics\n", "sourceMap": "400:2355:4:-:0;;;849:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;918:8;:20;;-1:-1:-1;;918:20:4;;;;;;;948:28;961:14;948:12;:28::i;:::-;849:134;;400:2355;;989:298;1044:12;:22;;;1094:15;1076;:33;1119:11;:13;;;-1:-1:-1;1119:13:4;;;:::i;:::-;;;;-1:-1:-1;;1152:11:4;;;1142:22;;;;:9;:22;;;;;;;;:32;;;;1197:11;;1184:25;;:12;:25;;;;;1212:15;1184:43;;;;1250:11;;1237:25;;:12;:25;;;;;;:43;989:298::o;14:353:5:-;;;151:2;139:9;130:7;126:23;122:32;119:2;;;172:6;164;157:22;119:2;209:9;203:16;259:4;252:5;248:16;241:5;238:27;228:2;;284:6;276;269:22;228:2;357;342:18;;;;336:25;312:5;;336:25;;-1:-1:-1;;;109:258:5:o;372:236::-;;-1:-1:-1;;432:17:5;;429:2;;;-1:-1:-1;;;472:33:5;;528:4;525:1;518:15;558:4;479:3;546:17;429:2;-1:-1:-1;600:1:5;589:13;;419:189::o;:::-;400:2355:4;;;;;;", "sourcePath": "contracts/test/MockV3Aggregator.sol", "type": "contract", "deployment": {"address": "0x9Cd7A870B559ab8306E032d6C9791b74fe4Cfd5C", "chainid": "1337", "blockHeight": 3}}